#define N 1; // Buffer size
#define NB 3; // Number of buffers
#define RUNTIME 24000; // Number of Hours

var bSTickets = 0;

ReleaseBS() = {bSTickets++} -> ReleaseBS();

VM() = startM -> mTerminate -> beginShutDown -> spawnCleaner -> shutDown -> Skip;

Main() = startM -> parseInputs -> spawnApp -> setTimer -> interruptApp -> mTerminate -> Skip;



//Timer() = setTimer -> countdown{
//	var counter = RUNTIME;
//	while (counter != 0) {
//		counter--;
//	}
//} -> interruptApp -> Timer();




App() = spawnApp -> initialise -> processSeeds -> spawnCrawler -> spawnBuilder -> interruptApp -> Skip; // Add wait to be 


Crawler() = spawnCrawler -> getUrlFromQueue -> extractsUrl -> checkUrlsInIUT -> addUrlToQueue -> grabCrawlerSemaphore -> addDataToBuffer
	-> releaseBuilderSemaphore -> Skip;
	
Builder() = spawnBuilder -> writeDataIntoIUT -> releaseCrawlerSemaphore -> Skip;

Cleaner() = spawnCleaner -> writeRemainingDataToIUT -> writeFromQueueToDisk -> reportStatistics -> Skip;


Program() = VM() || Main() || App() || Crawler() || Builder() || Cleaner();

#assert Program() deadlockfree;
